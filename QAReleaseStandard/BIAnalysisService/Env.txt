-----------------Jenkins Metadata-------------------------

JenkinNodeID=slave02

-------------SVN Information-------------------------

SCM_Cred_ID=57108b0f-6fa2-4793-ab88-fddb8d494464
SCM_checkout=http://192.168.1.69/svn/trinityANALYST-MLComposer/branches/RnD_ANALYTIKA_v2.0.1_2462/AnalytikaFlaskService/
-------------Build npm & ng ngBuildParam Goal-------------------------

npmBuildParam=
ngBuildParam=--prod

---------------SonarScan-----------

sonarscanner=/opt/sonar/sonar-scanner-4.2.0.1873-linux_client/bin/sonar-scanner
sonarprojectName=trinityIoT-MLComposer_AnalytikaFlaskService_nightly
sonarhosturl=http://192.168.1.185:9000
sonarlogin=admin
sonarpassword=Sonar@Admin
sonarsvnusername=bhargava.t
sonarsvnpasswordsecured=c@ntgetm3
sonarexclusions=**/unit_test/**,**/dist/**
sonaradditionalParam=

---------------------------TestAutomation-------------------------

-------------------------------Ansible--------------
### use it for linux AnsibleBaseUrl=http://192.168.1.143:8081/repository/continues_delivery/Ansible/ClientBuildUploaderLinx.yml

ansibleplaybook=/opt/Ansible/testAutomationFramework/trinityQA_windows_Test/site.yml
hostspath=/opt/Ansible/testAutomationFramework/trinityQA_windows/hosts-Env
TargetMachine=192.168.1.51
ansible_user=administrator
ansible_password=trinity@123
Param_config=AT_Config
Param_XVaultToken=XVaultToken
token= fa2fce04-46a9-4083-bbc9-0491dd58d7a9
vault_conf= http://192.168.1.185:8200/v1/secret/AutomationConfiguration/ApplicationsUrlandCredentialsConfig
drive= c
testAutomationFramework_Directory=testAutomationFramework
Projectcode=15096
ProjectPlanecode=32252
Project_Build=Nightly
TESTLINK_API_PYTHON_SERVER_URL=http://192.168.8.26:8080/testlink-1.9.19/lib/api/xmlrpc/v1/xmlrpc.php
TESTLINK_API_PYTHON_DEVKEY=365fe5aadd2781d48314ad01ea1db130
jar=Trinity_QA_GenericFramework-V0.1-jar-with-dependencies.jar	
#async in Seconds
async=1800
poll=2
Report_Url=NA

-------------ZapProxy

Application_BaseUrl=http://192.168.1.188
Applicat_authloginurl=http://192.168.1.188
Application_authusername=admin
Application_authpassword=admin
Nexus_Username=admin
Nexus_Password=TrInItY123
Zap_Output=out/zap_scan_report.html
NexusHost=192.168.1.143:8081
ProjectID=CAICOC
BuildType=Nightly
BuildName=CEPCitizenPortal
Zap_Nexus_Url=NA
JococReport=NA
---------------Apache Information Deployment-----------
remotehost=192.168.1.33
remoteuser=root
remotepassword=trinity@123
ansibleSShPort=22
tomcatDir=/var/www/html
ServiceID=apache2
isVirtuEnvReq=true
isDeploymentReq=true
BuildWithVerNo=false
NexusRepoReq=true
isQGValidationReq=false
isUnitTCaseEReq=true
isStaticReq=true
isUnitTCaseEReportReq=true
isDeploymentReq=true
---------------Nexus Artifact_Product-----------

NexusUserID=admin
NexusUserPass=TrInItY123
BuildName=AnalytikaFlaskService
AppBuildName=AnalytikaFlaskService
NexusUrl=192.168.1.143:8081
NexusRepoID=trinityIoTPlatform-RnD
Artifact_Product=trinityIoT-MLComposer

----JIRA Information---------
JIRAProjecKey=ANALYTIKA
JIRAIssueKey=ANALYTIKA-131
JiraDeveloperID=5d301006e161600bfbc9efe6
JiraQAOwnerID=5ed4a753d385dd0c267e571c
JiraSite=jenkins

---------------------Success Email
smtphost=ns5.tecz.com
smtpport=465
smtpPass=Welcome@098
smtpUser= jenkinsnotification@trinitymobility.in
API_Email_Url=http://192.168.1.26:8284/sendmail
API_To=jagadeep@trinitymobility.com
API_CC=pradeep.ab@trinitymobility.com,bhargava.t@trinitymobility.com
EmailSubject='trinityIoT-MLComposer_AnalytikaFlaskService_nightly Build is successful'
Emailmessagebody='<p\nclass="strong">Dear\nTeam,</p><p>&emsp;&emsp;Application\nis\nDeployed\nsuccessfully\nand\ntest\nexecusion\nwas\nsuccessful\n.Please\ndo\nRefer\nfollowing\nreports.</p>1.\n<a\nhref="NA">Unit\nTest\nCase\nReport\n</a><br>2.\n<a\nhref="$Static_Nexus">Static\ncode\nAnalysis\nReport(SonarQube)\n</a><br>3.\n<a\nhref="$JococReport">Unit\nTesting\nCoverage\nReport(Jacoco)\n</a><br>4.\n<a\nhref="$Zap_Nexus_Url">CyberSecurity\nReport(ZAP)\n</a><br>5.\n<a\nhref="$Report_Url">Automation\nReport(BDD(CUCUMBER))\n</a><br>6.\n<a\nhref="$CodeCoverage_Url">Code\nCoverage\nReport(Cobertura)\n</a><br><p>Thanks\nand\nRegards,<br>Bhargava\nT\n</p>' 
---------------------Failure Email
Notification_Script=/opt/Ansible/testAutomationFramework/email
Fail_EmailSubject='trinityIoT-MLComposer_AnalytikaFlaskService_nightly Build is Failed, Please do Validate'
Fail_Emailmessagebody="Application is Build is Failed and Please do Validate, Refer Testlink for Report,Automation Report(BDD(CUCUMBER)):( $Report_Url ),Refer Static code Analysis Report(SonarQube):( $Static_Nexus ),Unit Testing Coverage Report(Jacoco):($JococReport) ,Refer CyberSecurity Report(ZAP):( $Zap_Nexus_Url ),Refer Application URL :( $Application_url ),Refer Code Coverage Report(Cobertura):( NA )"  

----------------------------------SonarReport:
SonarSecID=724593f945014c04e026656f22e31903b302a099
SonarQubeUrl=http://192.168.1.185:9000
ReportJAR=sonar-cnes-report-3.2.2.jar
SonarProjectID=trinityIoT-MLComposer_AnalytikaFlaskService_nightly
Static_Nexus=http://192.168.1.143:8081/repository/trinityIoTPlatform-RnD/Dev/StaticAnalysis/trinityIoT-MLComposer_AnalytikaFlaskService_nightly.docx